import frappe


def on_sales_invoice_created(self, method):
    receiver_email = None

    if self.contact_email:
        receiver_email = self.contact_email
    else:
        customer_contacts = frappe.get_all(
            "Dynamic Link",
            filters={"link_doctype": "Customer", "link_name": self.customer},
            fields=["parent"],
        )

        if customer_contacts:
            # Fetch contacts in one go to minimize database calls
            contact_ids = [contact['parent'] for contact in customer_contacts]
            contacts = frappe.get_all("Contact", filters={"name": ("in", contact_ids)}, fields=["name", "is_billing_contact", "is_primary_contact", "email_id"])

            # Prioritize billing contact first
            for contact in contacts:
                if contact.is_billing_contact and contact.email_id:
                    receiver_email = contact.email_id
                    break  # Stop searching if found

            # If no billing contact found, prioritize primary contact
            if not receiver_email:
                receiver_email = next(
                    (contact.email_id for contact in contacts if contact.is_primary_contact and contact.email_id),
                    None  # If no primary contact found, receiver_email will stay None
                )
    # Send email only if receiver_email is set
    if receiver_email:
        frappe.sendmail(
            recipients=receiver_email,
            subject="New Sales Invoice Created",
            message=f"""<p>Dear {self.customer},</p>

            <p>A new sales invoice (<b>{self.name}</b>) has been generated by <b>{self.company}</b> on <b>{self.posting_date}</b> for <b>{self.grand_total}</b>.</p>

            <p>Please review the details and contact us if you have any questions.</p>

            <p>Thank you for your business!</p>""",
        )
    
    else:
        frappe.log_error(
            f"No valid email found for customer: {self.customer}",
            "Email Notification Error",
        )
        frappe.throw(
            f"No valid email found for customer: {self.customer}",
            title="Email Notification Error",
        )
   